Transform: AWS::Serverless-2016-10-31

Description: "Roles for ETL project"

Parameters:
  LambdaLayerParameter:
    Type: String

  pS3BucketName:
    Type: String
    Description: "S3 bucket"

Resources:

  ##Policies

  BasicManagedPolicyforCodeBuild:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "This is sample CFN template"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "lambdalayeraccess"
            Effect: "Allow"
            Action:
              -  "lambda:Publish*"
              -  "lambda:List*"
            Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:${AWS::StackName}-pandas-layer"

          - Sid: "logaccess"
            Effect: "Allow"
            Action:
              -  logs:CreateLogGroup
              -  logs:CreateLogStream
              -  logs:PutLogEvents
            Resource: "*"

          - Sid: "SSMPutparamater"
            Effect: "Allow"
            Action:
              - ssm:PutParameter
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${LambdaLayerParameter}"

  ##Roles

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
          - !Ref BasicManagedPolicyforCodeBuild

  ##Codebuild project

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Test build to validate the resources created by CFN templates
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              install:
                runtime-versions:
                  python: 3.10
              commands:
                - mkdir -p build/python
                - echo "certifi==2023.5.7" > requirements.txt
                - echo "charset-normalizer==3.1.0" >> requirements.txt
                - echo "idna==3.4" >> requirements.txt
                - echo "pycparser==2.21" >> requirements.txt
                - echo "python-dateutil==2.8.2" >> requirements.txt
                - echo "pytz==2023.3" >> requirements.txt
                - echo "tzdata==2023.3" >> requirements.txt
                - echo "numpy==1.24.3" >> requirements.txt
                - echo "cryptography==40.0.2" >> requirements.txt
                - echo "pandas==2.0.1" >> requirements.txt
                - echo "openpyxl==3.1.2" >> requirements.txt
                - echo "pymssql==2.2.7" >> requirements.txt
                - echo "urllib3==1.26.15" >> requirements.txt
                - echo "Office365-REST-Python-Client==2.3.9" >> requirements.txt
                - pip install -r requirements.txt -t ./build/python
                - pip freeze --path ./build/python
                - cd ./build && zip -r ../temp.zip .
                - pwd
                - ls -l
                - ls -lrt
                - cd ..
                - ls -l
                - out=$(aws lambda publish-layer-version --layer-name ${LayerName} --zip-file fileb://temp.zip --compatible-runtimes python3.10| jq .LayerVersionArn |tr -d "\"")
                - aws ssm put-parameter  --name ${SSMParameterName} --value ${out} --type "String" --overwrite
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        EnvironmentVariables:
          - Name: LayerName
            Type: PLAINTEXT
            Value: !Sub "${AWS::StackName}-pandas-layer"
          - Name: SSMParameterName
            Type: PLAINTEXT
            Value: !Ref LambdaLayerParameter

Outputs:
#Export Policies
  BasicManagedPolicyforCodeBuild:
    Value: !Ref BasicManagedPolicyforCodeBuild
    Export:
      Name: BasicManagedPolicyforCodeBuild

#ExportRoles
  CodeBuildRole:
    Value: !Ref CodeBuildRole
    Export:
      Name: CodeBuildRole

#Export CodeBuild Project
  CodeBuildProject:
    Value: !Ref CodeBuildProject
    Export:
      Name: CodeBuildProject