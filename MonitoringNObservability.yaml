Transform: AWS::Serverless-2016-10-31

Description: "Template to create observability resources"

Parameters:

  DynamoFormatMetadataName:
    Description: "Dynamo metadata table name to store data formats of data extraction pipelines"
    Type: String

  DynamoFormatMetadataKey:
    Description: "Dynamo metadata table key name to store data formats of data extraction pipelines"
    Type: String

  PipelineLogGroupName:
    Type: String

  ExtractLogStreamName:
    Type: String

  TransformLogStreamName:
    Type: String

  LoadLogStreamName:
    Type: String

  ResultLogStreamName:
    Type: String

  MyDeadLetterQueueArn:
    Type: String

  MyDeadLetterQueueRef:
    Type: String

  SNSTopic:
    Type: String

  FirstSqsQueueArn:
    Type: String
  
Resources:

  #Cloudwatch

  MyCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.sqs
        detail-type:
          - 'Amazon SQS Message'
        resources:
          - MyDeadLetterQueueArn
      State: ENABLED
      Targets:
        - Arn: !Ref SNSTopic
          Id: MySnsTarget

  MyCloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm for DLQ message count
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !Select [5, !Split [":", MyDeadLetterQueueArn]]
      Statistic: Sum
      Period: 300 #seconds
      EvaluationPeriods: 1
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SNSTopic

  ##Metadata to check extraction - resources

  DynamoFormatMetadata:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoFormatMetadataName
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: !Ref DynamoFormatMetadataKey
        AttributeType: S

      KeySchema:
      - AttributeName: !Ref DynamoFormatMetadataKey
        KeyType: HASH
      SSESpecification:
        SSEEnabled: true

##Monitoring services cloudwatch

  PipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref PipelineLogGroupName
      RetentionInDays: 30

  ExtractLogStream:
    Type: AWS::Logs::LogStream
    DependsOn: PipelineLogGroup
    Properties:
      LogGroupName: !Ref PipelineLogGroupName
      LogStreamName: !Ref ExtractLogStreamName

  TransformLogStream:
    Type: AWS::Logs::LogStream
    DependsOn: PipelineLogGroup
    Properties:
      LogGroupName: !Ref PipelineLogGroupName
      LogStreamName: !Ref TransformLogStreamName

  LoadLogStream:
    Type: AWS::Logs::LogStream
    DependsOn: PipelineLogGroup
    Properties:
      LogGroupName: !Ref PipelineLogGroupName
      LogStreamName: !Ref LoadLogStreamName

  ResultLogStream:
    Type: AWS::Logs::LogStream
    DependsOn: PipelineLogGroup
    Properties:
      LogGroupName: !Ref PipelineLogGroupName
      LogStreamName: !Ref ResultLogStreamName

  # Define the event rule to filter for events
  
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "EventRule"
      ScheduleExpression: rate(1 day)
      EventPattern:
        account:
          - !Sub '${AWS::AccountId}'
        source:
          - "demo.sqs"
      Targets:
        - Arn: FirstSqsQueueArn
          Id: "SQSqueue"

  # Dead Letter Queue

  MyDLQQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MyDeadLetterQueueRef
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - sns:Publish
              - sns.Subscribe
              - sns:SendMessage
              - sqs:GetQueueAttributes
              - sqs:ListDeadLetterSourceQueues
              - cloudwatch:PutMetricData
              - kms:Encrypt
              - kms:Decrypt
              - kms:DescribeKey
              - kms:GenerateDataKey
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - sqs:SendMessage
              - sqs:ListDeadLetterSourceQueues
              - cloudwatch:PutMetricData
              - kms:Encrypt
              - kms:Decrypt
            Resource:
              - MyDeadLetterQueueArn
              - !GetAtt MyCloudWatchAlarm.Arn